@using Blazored.LocalStorage
@using System.Security.Claims
@using MinimalBlazorAdmin.Client.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorageService

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                @* <Authorizing> *@
                @*     Authorizing... *@
                @* </Authorizing> *@
                <NotAuthorized>
                    @* 把重定向导航放到组件中 *@
                    @* <RedirectToLogin/> *@
                    <p>You should authorize.</p>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code
{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        var savedToken = await localStorageService.GetItemAsync<string>("authToken");

        if (string.IsNullOrWhiteSpace(savedToken))
        {
            NavigationManager.NavigateTo("/login");
        }

        if (!((CustomAuthProvider) AuthenticationStateProvider).IsJwtValidExpire(savedToken))
        {
            NavigationManager.NavigateTo("/login");
        }
    }
    
    

    
}
